CREATE TABLE Function(
                         id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                         name varchar(50)
);

CREATE TABLE Speciality(
                           id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                           name varchar(50),
                           function_id int,
                           FOREIGN KEY(function_id) REFERENCES Function(id) ON DELETE CASCADE
);

CREATE TABLE User_Details(
                             id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                             name varchar(50),
                             email varchar(50) unique,
                             password varchar(100),
                             speciality_id int,
                             FOREIGN KEY(speciality_id) REFERENCES Speciality(id)
);

CREATE TABLE Reset_Password_Request(
                                       id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                                       request_id UUID,
                                       user_id int,
                                       FOREIGN KEY(user_id) REFERENCES User_Details(id)
);

insert into Function(name) VALUES ('Neurologie');
insert into Function(name) VALUES ('Cardiologie');
insert into Function(name) VALUES ('Ortopedie');
insert into Function(name) VALUES ('Oncologie');
insert into Function(name) VALUES ('Pediatrie');

insert into Speciality(name,function_id) VALUES ('Neuroradiologie',1);
insert into Speciality(name,function_id) VALUES ('Neurochirurgie',1);
insert into Speciality(name,function_id) VALUES ('Electrofiziologie cardiacă',2);
insert into Speciality(name,function_id) VALUES ('Chirurgie cardiacă',2);
insert into Speciality(name,function_id) VALUES ('Chirurgie a mâinii și încheieturii mâinii',3);
insert into Speciality(name,function_id) VALUES ('Chirurgie a șoldului și a genunchiului',3);
insert into Speciality(name,function_id) VALUES ('Radioterapie',4);
insert into Speciality(name,function_id) VALUES ('Chirurgie oncologică',4);
insert into Speciality(name,function_id) VALUES ('Neonatologie',5);
insert into Speciality(name,function_id) VALUES ('Endocrinologie pediatrică',5);

insert into User_Details(name,email,password,speciality_id) VALUES ('Calin','calin@gmail.com','sdfsfd',1);

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
SELECT uuid_generate_v4();
insert into Reset_Password_Request(request_id,user_id) VALUES (uuid_generate_v4(),1);
ALTER TABLE Reset_Password_Request ADD CONSTRAINT constrId UNIQUE (id);

Create table Diagnosis(
                          id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                          inital_diagnosis varchar(50),
                          seventy_two_hour_diagnosis varchar(50),
                          final_diagnosis varchar(50)
);

Create table Patient_Surgery_Details(
                                        id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                                        team_of_medics varchar(50),
                                        details varchar(50),
                                        Date date
);

Create table Patient_History_Details(
                                        id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                                        heredo_collateral_antecedents varchar(50),
                                        living_conditions varchar(50),
                                        behaviors varchar(50),
                                        background_medication varchar(50),
                                        disease_history varchar(50),
                                        general_clinical_examination varchar(50)
) ;

Create table Insurance_Type(
                               id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                               type varchar(50)
);

Create table Insurance_Status(
                                 id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                                 status varchar(50)
);

Create table Admission_Type(
                               id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                               type varchar(50)
);

Create table Room(
                     id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                     name varchar(50),
                     speciality_id int,
                     FOREIGN KEY(speciality_id) REFERENCES Speciality(id) ON DELETE CASCADE
);

Create table Patient(
                        id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                        first_name varchar(50) NOT NULL,
                        last_name varchar(50) NOT NULL,
                        gender varchar(50) NOT NULL,
                        birth_date date NOT NULL,
                        address varchar(50) NOT NULL,
                        personal_numeric_code varchar(13) unique NOT NULL,
                        id_series_and_number varchar(50) NOT NULL,
                        type_of_insurance_id int,
                        FOREIGN KEY(type_of_insurance_id) REFERENCES Insurance_Type(id) ON DELETE CASCADE,
                        insurance_status_id int,
                        FOREIGN KEY(insurance_status_id) REFERENCES Insurance_Status(id) ON DELETE CASCADE,
                        type_of_admission_id int,
                        FOREIGN KEY(type_of_admission_id) REFERENCES Admission_Type(id) ON DELETE CASCADE,
                        speciality_id int,
                        FOREIGN KEY(speciality_id) REFERENCES Speciality(id) ON DELETE CASCADE,
                        room_id int,
                        FOREIGN KEY(room_id) REFERENCES Room(id) ON DELETE CASCADE,
                        diagnosis_id int,
                        FOREIGN KEY(diagnosis_id) REFERENCES Diagnosis(id) ON DELETE CASCADE,
                        surgery_details_id int,
                        FOREIGN KEY(surgery_details_id) REFERENCES Patient_Surgery_Details(id) ON DELETE CASCADE,
                        history_details_id int,
                        FOREIGN KEY(history_details_id) REFERENCES Patient_History_Details(id) ON DELETE CASCADE
);

Create table Patient_Evolution(
                                  id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                                  evolution_description varchar(50),
                                  from_date date,
                                  to_date date,
                                  evolution_id int,
                                  FOREIGN KEY(evolution_id) REFERENCES Patient(id) ON DELETE CASCADE
);


insert into Insurance_Type(type) values ('aa');
insert into Insurance_Type(type) values ('bb');
insert into Insurance_Type(type) values ('cc');
insert into Insurance_Type(type) values ('dd');


-- For type_of_insurance_id in Patient table
INSERT INTO Insurance_Type (id, type) VALUES (1, 'Public');
INSERT INTO Insurance_Type (id, type) VALUES (2, 'Private');
INSERT INTO Insurance_Type (id, type) VALUES (3, 'None');

-- For insurance_status_id in Patient table
INSERT INTO Insurance_Status (id, status) VALUES (1, 'Active');
INSERT INTO Insurance_Status (id, status) VALUES (2, 'Inactive');

-- For type_of_admission_id in Patient table
INSERT INTO Admission_Type (id, type) VALUES (1, 'Emergency');
INSERT INTO Admission_Type (id, type) VALUES (2, 'Planned');

-- For room_id in Patient table
INSERT INTO Room (id, name, speciality_id) VALUES (1, 'Room A', 1);
INSERT INTO Room (id, name, speciality_id) VALUES (2, 'Room B', 2);
INSERT INTO Room (id, name, speciality_id) VALUES (3, 'Room C', 3);
INSERT INTO Room (id, name, speciality_id) VALUES (4, 'Room D', 4);
INSERT INTO Room (id, name, speciality_id) VALUES (5, 'Room E', 5);
INSERT INTO Room (id, name, speciality_id) VALUES (6, 'Room F', 6);

-- For diagnosis_id in Patient table
INSERT INTO Diagnosis (id, inital_diagnosis, seventy_two_hour_diagnosis, final_diagnosis) VALUES (1, 'Migraine', 'Migraine with aura', 'Chronic migraine');
INSERT INTO Diagnosis (id, inital_diagnosis, seventy_two_hour_diagnosis, final_diagnosis) VALUES (2, 'Myocardial infarction', 'STEMI', 'STEMI with reperfusion');
INSERT INTO Diagnosis (id, inital_diagnosis, seventy_two_hour_diagnosis, final_diagnosis) VALUES (3, 'Fracture', 'Oblique fracture of the radius', 'Oblique fracture of bone');

-- For surgery_details_id in Patient table
INSERT INTO Patient_Surgery_Details (id, team_of_medics, details, Date) VALUES (1, 'Dr. Smith, Dr. Johnson', 'Open heart surgery', '2022-01-01');
INSERT INTO Patient_Surgery_Details (id, team_of_medics, details, Date) VALUES (2, 'Dr. Brown, Dr. Martinez', 'Spinal fusion surgery', '2022-02-15');
INSERT INTO Patient_Surgery_Details (id, team_of_medics, details, Date) VALUES (3, 'Dr. Lee, Dr. Davis', 'Knee replacement surgery', '2022-03-10');

-- For history_details_id in Patient table
INSERT INTO Patient_History_Details (id, heredo_collateral_antecedents, living_conditions, behaviors, background_medication, disease_history, general_clinical_examination) VALUES (1, 'None', 'Urban area, apartment', 'Nonsmoker, social drinker', 'None', 'Migraine, anxiety disorder', 'Within normal limits');
INSERT INTO Patient_History_Details (id, heredo_collateral_antecedents, living_conditions, behaviors, background_medication, disease_history, general_clinical_examination) VALUES (2, 'Had hyperthension', 'Rural area, house', 'Nonsmoker, no alcohol consumption', 'None', 'Depression', 'Within normal limits');
INSERT INTO Patient_History_Details (id, heredo_collateral_antecedents, living_conditions, behaviors, background_medication, disease_history, general_clinical_examination) VALUES (3, 'No significant heredo-collateral antecedents', 'Lives in a house with good conditions', 'Non-smoker, drinks occasionally', 'None', 'No significant medical history', 'Normal clinical examination');


ALTER TABLE Patient
ADD COLUMN admission_date date NOT NULL;

INSERT INTO Patient(id, first_name, last_name, gender, birth_date, address, personal_numeric_code, id_series_and_number, type_of_insurance_id, insurance_status_id, type_of_admission_id, speciality_id, room_id, diagnosis_id, surgery_details_id, history_details_id,admission_date) VALUES (1, 'John', 'Doe', 'Male', '1990-01-01', '123 Main St', '1234567890123', 'AB123456', 1, 1, 1, 1, 1, 1, 1, 1,'2023-02-12');
INSERT INTO Patient(id, first_name, last_name, gender, birth_date, address, personal_numeric_code, id_series_and_number, type_of_insurance_id, insurance_status_id, type_of_admission_id, speciality_id, room_id, diagnosis_id, surgery_details_id, history_details_id,admission_date) VALUES (2, 'Jane', 'Smith', 'Female', '1985-05-05', '456 Elm St', '9876543210123', 'CD987654', 2, 2, 2, 2, 2, 2, 2, 2,'2023-04-15');
INSERT INTO Patient(id, first_name, last_name, gender, birth_date, address, personal_numeric_code, id_series_and_number, type_of_insurance_id, insurance_status_id, type_of_admission_id, speciality_id, room_id, diagnosis_id, surgery_details_id, history_details_id,admission_date) VALUES (3, 'Bob', 'Johnson', 'Male', '1975-12-31', '789 Oak St', '4567890123456', 'EF456789', 3, 2, 2, 3, 3, 3, 3, 3,'2023-01-10');
